{{- if ne .os "linux-arch" -}} {{- abortEmpty -}} {{- end -}}
#!/usr/bin/env nu

print $"(ansi bb)dotfiles:(ansi rst) enabling kanata"

print $"(ansi bb)dotfiles:(ansi rst) creating kanata rules"

let file = "/etc/udev/rules.d/kanata.rules"

let dir = ($file | path dirname)
sudo mkdir --parents $dir

if ($file | path exists) {
    print $"(ansi bb)dotfiles:(ansi rst) found rule"

    let backup = $"($file).bak"
    if ($backup | path exists) {
        print --stderr $"(ansi rb)dotfiles:(ansi rst) ($backup) already exists"
        exit 1
    }

    sudo mv $file $backup

    print $"(ansi gb)dotfiles:(ansi rst) created ($backup)"
}

print $"(ansi bb)dotfiles:(ansi rst) configuring groups"

let groups = (cat /etc/group | lines | each { $in | split row ':' | get 0 })

if ('input' not-in $groups) {
    sudo groupadd input
}

if ('uinput' not-in $groups) {
    sudo groupadd uinput
}

let user = {{ .chezmoi.username | quote }}
sudo usermod -aG input $user
sudo usermod -aG uinput $user

print $"(ansi gb)dotfiles:(ansi rst) configured groups"

let rules = 'KERNEL=="uinput", MODE="0660", GROUP="uinput", OPTIONS+="static_node=uinput"'

let ext = ($file | path parse | get extension)
let tmp = mktemp --tmpdir "dotfiles.kanata.XXX" --suffix $".($ext)"
$rules | save --force $tmp

sudo sh -c $"cat ($tmp) > ($file)"

print $"(ansi gb)dotfiles:(ansi rst) created kanata rules"

sudo modprobe uinput
systemctl --user enable --now kanata.service

print $"(ansi gb)dotfiles:(ansi rst) enabled kanata"

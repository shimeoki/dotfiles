$mod = super

$mouse_left    = mouse:272
$mouse_right   = mouse:273
$mouse_middle  = mouse:274
$mouse_forward = mouse:276
$mouse_back    = mouse:275

binds {
    scroll_event_delay = 0
    workspace_back_and_forth = true
}

bind = $mod ctrl, e, exit
bind = $mod ctrl, p, exec, poweroff
bind = $mod ctrl, r, exec, reboot
bind = $mod ctrl, b, exec, killall -SIGUSR1 waybar
bind = $mod ctrl, d, exec, hyprpicker -a

bind = $mod,       v, togglefloating
bind = $mod shift, v, pin

bind = $mod, p, pseudo

# special workspace (S is the name for waybar)
bind = $mod,            space, togglespecialworkspace, S
bind = $mod shift,      space, movetoworkspacesilent, special:S
bind = $mod shift ctrl, space, movetoworkspace,       special:S

# search and launcher
bind = $mod,       r, exec, albert toggle
bind = $mod shift, r, exec, wofi --show drun

# opacity
bind = $mod, slash, tagwindow, alpha-0.9

# hyprexpo
bind = $mod, tab, hyprexpo:expo, toggle

$wayland_decorations = --enable-features=WaylandWindowDecorations
$wayland_hint = --ozone-platform-hint=wayland
$wayland_opts = $wayland_decorations $wayland_hint

bind = $mod, b, exec, zen-browser
bind = $mod, n, exec, obsidian
bind = $mod, m, exec, materialgram
bind = $mod, a, exec, pwvucontrol

bind = $mod,       d, exec, discord $wayland_opts
bind = $mod shift, d, exec, vesktop $wayland_opts

# open
bind = $mod,      return, exec, SHELL=nu kitty
bind = $mod ctrl, return, exec, kitty

# close
bind = $mod,       backspace, killactive
bind = $mod shift, backspace, forcekillactive

# info: it kills *current* workspace, *not* hovered by mouse
# if you want to kill on mouse hover, grab it with lmb and then press mmb
bind = $mod,       $mouse_middle, killactive
bind = $mod shift, $mouse_middle, forcekillactive

bind = $mod, f, fullscreen

# focus
bind = $mod, k, movefocus, u
bind = $mod, l, movefocus, r
bind = $mod, j, movefocus, d
bind = $mod, h, movefocus, l

# focus relative
bind = $mod, bracketleft,  cyclenext, prev
bind = $mod, bracketright, cyclenext

# focus relative (mouse)
bind = $mod, $mouse_back,    cyclenext, prev
bind = $mod, $mouse_forward, cyclenext

# swap
bind = $mod shift, k, swapwindow, u
bind = $mod shift, l, swapwindow, r
bind = $mod shift, j, swapwindow, d
bind = $mod shift, h, swapwindow, l

# swap relative
bind = $mod shift, bracketleft,  swapnext, prev
bind = $mod shift, bracketright, swapnext

# groups

bind = $mod ctrl, g, togglegroup

bind = $mod ctrl, bracketleft,  changegroupactive, b
bind = $mod ctrl, bracketright, changegroupactive, f

bind = $mod shift ctrl, bracketleft,  movegroupwindow, b
bind = $mod shift ctrl, bracketright, movegroupwindow, f

bind = $mod ctrl, k, movewindoworgroup, u
bind = $mod ctrl, l, movewindoworgroup, r
bind = $mod ctrl, j, movewindoworgroup, d
bind = $mod ctrl, h, movewindoworgroup, l

bind = $mod ctrl, 1, changegroupactive, 1
bind = $mod ctrl, 2, changegroupactive, 2
bind = $mod ctrl, 3, changegroupactive, 3
bind = $mod ctrl, 4, changegroupactive, 4
bind = $mod ctrl, 5, changegroupactive, 5
bind = $mod ctrl, 6, changegroupactive, 6
bind = $mod ctrl, 7, changegroupactive, 7
bind = $mod ctrl, 8, changegroupactive, 8
bind = $mod ctrl, 9, changegroupactive, 9

$resize = 40
binde = $mod shift ctrl, k, resizeactive, 0 -$resize
binde = $mod shift ctrl, l, resizeactive, $resize 0
binde = $mod shift ctrl, j, resizeactive, 0 $resize
binde = $mod shift ctrl, h, resizeactive, -$resize 0

bind = $mod,       backslash, layoutmsg, togglesplit
bind = $mod shift, backslash, layoutmsg, swapsplit

bind = $mod, semicolon,  layoutmsg, preselect d
bind = $mod, apostrophe, layoutmsg, preselect r

# focus
bind = $mod, 1, workspace, 1
bind = $mod, 2, workspace, 2
bind = $mod, 3, workspace, 3
bind = $mod, 4, workspace, 4
bind = $mod, 5, workspace, 5
bind = $mod, 6, workspace, 6
bind = $mod, 7, workspace, 7
bind = $mod, 8, workspace, 8
bind = $mod, 9, workspace, 9

# focus relative
bind = $mod, comma,  workspace, m-1
bind = $mod, period, workspace, m+1

# focus relative (mouse)
bind = $mod, mouse_up,   workspace, m-1
bind = $mod, mouse_down, workspace, m+1

# swap window to
bind = $mod shift, 1, movetoworkspacesilent, 1
bind = $mod shift, 2, movetoworkspacesilent, 2
bind = $mod shift, 3, movetoworkspacesilent, 3
bind = $mod shift, 4, movetoworkspacesilent, 4
bind = $mod shift, 5, movetoworkspacesilent, 5
bind = $mod shift, 6, movetoworkspacesilent, 6
bind = $mod shift, 7, movetoworkspacesilent, 7
bind = $mod shift, 8, movetoworkspacesilent, 8
bind = $mod shift, 9, movetoworkspacesilent, 9

# swap window and view to
bind = $mod shift ctrl, 1, movetoworkspace, 1
bind = $mod shift ctrl, 2, movetoworkspace, 2
bind = $mod shift ctrl, 3, movetoworkspace, 3
bind = $mod shift ctrl, 4, movetoworkspace, 4
bind = $mod shift ctrl, 5, movetoworkspace, 5
bind = $mod shift ctrl, 6, movetoworkspace, 6
bind = $mod shift ctrl, 7, movetoworkspace, 7
bind = $mod shift ctrl, 8, movetoworkspace, 8
bind = $mod shift ctrl, 9, movetoworkspace, 9

bindm = $mod,       $mouse_left,  movewindow
bindm = $mod shift, $mouse_left,  movewindow
bindm = $mod,       $mouse_right, resizewindow 2
bindm = $mod shift, $mouse_right, resizewindow 1

# screenshots

$shot_exec = exec, grimblast --notify --freeze

# $shot_dir = $(xdg-user-dir PICTURES)/screenshots/laptop
$shot_dir  = $HOME/Pictures/screenshots/laptop
$shot_name = $(date +"%Y-%m-%d-%H-%M-%S.png")
$shot_path = $shot_dir/$shot_name

bind = $mod,       s, $shot_exec --cursor copysave screen $shot_path
bind = $mod shift, s, $shot_exec copysave area            $shot_path
bind = $mod ctrl,  s, $shot_exec --cursor copysave active $shot_path

# clipboard
# source: https://wiki.hyprland.org/Useful-Utilities/Clipboard-Managers/#for-wofi-users

$wofi_cfg  = "$XDG_CONFIG_HOME/wofi/config-cliphist"
$wofi_opts = --dmenu --pre-display-cmd "cliphist-wofi-img %s"
$wofi_cmd  = wofi --conf $wofi_cfg $wofi_opts

bind = $mod ctrl, v, exec, cliphist list | $wofi_cmd | cliphist decode | wl-copy

# TODO: move this to README in the future

# short guide to replicate image preview
#
# source: https://github.com/pdf/cliphist-wofi-img
#
# first, install the package:
# go install github.com/pdf/cliphist-wofi-img@latest
#
# second, cd into:
# $HOME/go/pkg/mod/github.com/pdf/cliphist-wofi-img@vX.X.X
#
# third, build the binary executable:
# sudo go build main.go
#
# fourth, move the executable to /usr/bin.
# also rename it as you prefer (in my case "cliphist-wofi-img").
# final command looks like:
# sudo mv ./main /usr/bin/cliphist-wofi-img
#
# fifth, edit your wofi config:
# pre_display_exec=true
#
# sixth, launch wofi with:
# --pre-display-cmd "cliphist-wofi-img %s"
# (example of the command is above)
#
# everything should work. of course, you must
# install wofi, wl-copy and cliphist before that.
#
# thank you https://github.com/pdf for this amazing solution
